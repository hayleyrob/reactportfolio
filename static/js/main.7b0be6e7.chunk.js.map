{"version":3,"sources":["components/Navbar/Navbar.js","components/About/About.js","components/Portfolio/Portfolio.js","components/Card/Card.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","About","style","backgroundColor","color","src","alt","width","height","Portfolio","maxWidth","target","Card","props","text","movie","one","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qMAmBeA,G,KAjBA,WACb,OACE,yBAAKC,UAAU,iDACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,mBACA,4BAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC5K,0BAAMP,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BQ,GAAG,sBAC3C,yBAAKR,UAAU,cACb,uBAAGA,UAAU,oBAAoBC,KAAK,KAAtC,SACA,uBAAGD,UAAU,2BAA2BC,KAAK,KAA7C,SACA,uBAAGD,UAAU,oBAAoBC,KAAK,KAAtC,kBCUKQ,EApBD,WACZ,OACE,yBAAKT,UAAU,mBAAmBU,MAAO,CAAEC,gBAAiB,QAASC,MAAO,UACzE,yBAAKZ,UAAU,YACb,sCACA,yCAEH,yBAAKA,UAAU,YACb,yBAAKa,IAAI,kCAAkCC,IAAI,UAAUC,MAAM,MAAMC,OAAO,SAE9E,yBAAKhB,UAAU,YACb,2DACA,6CACA,mDACA,2CACA,mDCsBOiB,EAtCG,WAChB,OACE,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OAAOU,MAAQ,CAAEQ,SAAS,UACvC,yBAAKL,IAAI,kCAAkCb,UAAU,eAAec,IAAI,WACtE,yBAAKd,UAAU,aACb,wBAAIA,UAAU,cAAd,UACA,uBAAGA,UAAU,aAAb,iFACA,uBAAGC,KAAK,sCAAsCD,UAAU,kBAAkBmB,OAAO,UAAjF,gBAIR,yBAAKnB,UAAU,YACb,yBAAKA,UAAU,OAAOU,MAAO,CAAEQ,SAAU,UACvC,yBAAKL,IAAI,kCAAkCb,UAAU,eAAec,IAAI,eACpE,yBAAKd,UAAU,aACb,wBAAIA,UAAU,cAAd,cACA,uBAAGA,UAAU,aAAb,2DACA,uBAAGC,KAAK,qCAAqCD,UAAU,kBAAkBmB,OAAO,UAAhF,gBAKV,yBAAKnB,UAAU,YACb,yBAAKA,UAAU,OAAOU,MAAO,CAAEQ,SAAU,UACvC,yBAAKL,IAAI,kCAAkCb,UAAU,eAAec,IAAI,mBAClE,yBAAKd,UAAU,aACb,wBAAIA,UAAU,cAAd,mBACA,uBAAGA,UAAU,aAAb,8DACA,uBAAGC,KAAK,2CAA2CD,UAAU,kBAAkBmB,OAAO,UAAtF,kBClBHC,EAZF,SAACC,GACZ,OACE,yBAAKrB,UAAU,kCAAkCU,MAAQ,CAAEQ,SAAU,UACnE,yBAAKlB,UAAU,eAAeqB,EAAMC,MACpC,yBAAKtB,UAAU,aACb,wBAAIA,UAAU,cAAcqB,EAAME,OAClC,uBAAGvB,UAAU,aAAaqB,EAAMG,IAAhC,qGCkBOC,EAlBH,WACV,OACE,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMH,KAAM,SACZC,MAAO,yBACP,kBAAC,EAAD,CAAMD,KAAM,UACZ,kBAAC,EAAD,CAAMA,KAAO,YCNDI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7b0be6e7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar = () => {\n  return ( \n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"#\">Hayley Robinson</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <a className=\"nav-item nav-link\" href=\"#\">Home </a>\n          <a className=\"nav-item nav-link active\" href=\"#\">About</a>\n          <a className=\"nav-item nav-link\" href=\"#\">Portfolio</a>\n        </div>\n      </div>\n    </nav>\n  )\n}\nexport default Navbar","import React from 'react';\n\n\nconst About = () => {\n  return (\n    <div className=\"row aboutSection\" style={{ backgroundColor: 'black', color: 'white' }}>\n       <div className=\"col-md-4\">\n         <h2>Hayley</h2>\n         <h1>Robinson</h1>\n       </div>\n      <div className=\"col-md-4\">\n        <img src=\"https://i.imgur.com/mwVb05T.jpg\" alt=\"myPhoto\" width=\"300\" height=\"350\"></img>\n      </div>\n      <div className=\"col-md-4\">\n        <p>Full-Stack Software Engineer</p>\n        <p>UCLA Undergrad</p>\n        <p>Tech Sales Executive</p>\n        <p>Photographer</p>\n        <p>Design Enthusiast</p>\n      </div>\n     </div>\n  )\n}\nexport default About","import React from 'react';\n\nconst Portfolio = () => {\n  return ( \n    <div className=\"row\">\n      <div className=\"col-md-4\">\n        <div className=\"card\" style= {{ maxWidth:\"18rem\" }}>\n          <img src=\"https://i.imgur.com/EISoRJ4.jpg\" className=\"card-img-top\" alt=\"eSPACE\"/>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">eSPACE</h5>\n              <p className=\"card-text\">The Space Exploration e-learning app. Leverages SpaceX API and Space News API</p>\n              <a href=\"https://hayleyrob.github.io/eSPACE/\" className=\"btn btn-primary\" target=\"_blank\">Visit App</a>\n            </div>\n        </div>\n      </div>\n      <div className=\"col-md-4\">\n        <div className=\"card\" style={{ maxWidth: \"18rem\" }}>\n          <img src=\"https://i.imgur.com/Rtp0DET.png\" className=\"card-img-top\" alt=\"ArtistaDay\"/>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">ArtistaDay</h5>\n                <p className=\"card-text\">Artist timed sales events app with mySQL, Node, Express</p>\n                <a href=\"https://github.com/usrs/ArtistaDay\" className=\"btn btn-primary\" target=\"_blank\">Visit App</a>\n              </div>\n          </div>\n\n      </div>\n      <div className=\"col-md-4\">\n        <div className=\"card\" style={{ maxWidth: \"18rem\" }}>\n          <img src=\"https://i.imgur.com/MrgEP18.png\" className=\"card-img-top\" alt=\"WorkoutTracker\"/>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Workout Tracker</h5>\n                  <p className=\"card-text\">A Node, Express, and MongoDB App that tracks your workouts</p>\n                  <a href=\"https://guarded-tor-39894.herokuapp.com/\" className=\"btn btn-primary\" target=\"_blank\">Visit App</a>\n                </div>\n            </div>\n\n      </div>\n    </div>\n  )\n}\nexport default Portfolio","import React from 'react'\n\nconst Card = (props) => {\n  return(\n    <div className=\"card text-white bg-primary mb-3\" style= {{ maxWidth: \"18rem\" }}>\n      <div className=\"card-header\">{props.text}</div>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.movie}</h5>\n        <p className=\"card-text\">{props.one}Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import React from 'react';\nimport NavBar from './components/Navbar'\nimport About from './components/About'\nimport Portfolio from './components/Portfolio'\nimport Card from './components/Card'\n// import About from './components/About'\n// import Portfolio from './components/Portfolio'\n\nconst App = () => {\n  return (\n    <>\n        <NavBar />\n        <About />\n        <hr></hr>\n        <Portfolio />\n        <Card text =\"LanChi\" \n        movie =\"Beauty and the Beast\"/>\n        <Card text =\"Jonah\" />\n        <Card text = \"Shane\" />\n       \n\n    </>\n        \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}